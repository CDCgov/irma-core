use zoe::{
    data::{fastq::FastQ, types::phred::QualityScores},
    prelude::Nucleotides,
};

use crate::qc::fastq::ReadTransforms;

use super::fastq::fix_sra_format;

static QNAMES: [&str; 26] = [
    "SRR26182418.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
    "SRR26182418.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
    "SRR26182418.1.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
    "SRR26182418.1.2 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
    "A00350:691:HCKYLDSX3:2:2119:23863:2456/2",
    "A00350:691:HCKYLDSX3:2:2119:23863:2456/1",
    "M02989:9:000000000-L4PJL:1:2112:9890:15606 1:N:0:AACGCACGAG+GCCTCGGATA",
    "M02989:9:000000000-L4PJL:1:2112:9890:15606 2:N:0:AACGCACGAG+GCCTCGGATA",
    "NS500500:69:HKJFLAFX5:1:11204:14878:14643 1:N:0:TTCTCGTGCA+CTCTGTGTAT",
    "NS500500:69:HKJFLAFX5:1:11204:14878:14643 2:N:0:TTCTCGTGCA+CTCTGTGTAT",
    "A01000:249:HJFFWDRX2:1:2107:24605:18082 1:N:0:TAGGCATG+ATAGCCTT",
    "A01000:249:HJFFWDRX2:1:2107:24605:18082 2:N:0:TAGGCATG+ATAGCCTT",
    "M02989:9:000000000-L4PJL:1:2114:17393:19614_1:N:0:CTCTGCAGCG+GATGGATGTA",
    "M02989:9:000000000-L4PJL:1:2114:17393:19614_2:N:0:CTCTGCAGCG+GATGGATGTA",
    "M02989_1:9:000000000-L4PJL:1:2114:17393:19614_1:N:0:CTCTGCAGCG+GATGGATGTA",
    "M02989_1:9:000000000-L4PJL:1:2114:17393:19614_2:N:0:CTCTGCAGCG+GATGGATGTA",
    "SRR26182418.1_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=147",
    "SRR26182418.1_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=301",
    "SRR26182418.1.1_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=147",
    "SRR26182418.1.2_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=301",
    "SRR26182418.1 1:N:18:NULL",
    "SRR26182418.1.1 1:N:18:NULL",
    "ERR26182418.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
    "DRR26182418.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
    "ERR26182418.1.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
    "DRR26182418.2.2 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
];

#[test]
fn test_fix_sra_names() {
    let fixed = [
        "SRR26182418.1.0 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
        "SRR26182418.1.0 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
        "SRR26182418.1.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
        "SRR26182418.1.2 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
        "A00350:691:HCKYLDSX3:2:2119:23863:2456/2",
        "A00350:691:HCKYLDSX3:2:2119:23863:2456/1",
        "M02989:9:000000000-L4PJL:1:2112:9890:15606 1:N:0:AACGCACGAG+GCCTCGGATA",
        "M02989:9:000000000-L4PJL:1:2112:9890:15606 2:N:0:AACGCACGAG+GCCTCGGATA",
        "NS500500:69:HKJFLAFX5:1:11204:14878:14643 1:N:0:TTCTCGTGCA+CTCTGTGTAT",
        "NS500500:69:HKJFLAFX5:1:11204:14878:14643 2:N:0:TTCTCGTGCA+CTCTGTGTAT",
        "A01000:249:HJFFWDRX2:1:2107:24605:18082 1:N:0:TAGGCATG+ATAGCCTT",
        "A01000:249:HJFFWDRX2:1:2107:24605:18082 2:N:0:TAGGCATG+ATAGCCTT",
        "M02989:9:000000000-L4PJL:1:2114:17393:19614_1:N:0:CTCTGCAGCG+GATGGATGTA",
        "M02989:9:000000000-L4PJL:1:2114:17393:19614_2:N:0:CTCTGCAGCG+GATGGATGTA",
        "M02989_1:9:000000000-L4PJL:1:2114:17393:19614_1:N:0:CTCTGCAGCG+GATGGATGTA",
        "M02989_1:9:000000000-L4PJL:1:2114:17393:19614_2:N:0:CTCTGCAGCG+GATGGATGTA",
        "SRR26182418.1.0_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=147",
        "SRR26182418.1.0_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=301",
        "SRR26182418.1.1_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=147",
        "SRR26182418.1.2_M07901:28:000000000-KP3NB:1:1101:10138:2117_length=301",
        "SRR26182418.1.0 1:N:18:NULL",
        "SRR26182418.1.1 1:N:18:NULL",
        "ERR26182418.1.0 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
        "DRR26182418.1.0 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
        "ERR26182418.1.1 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=147",
        "DRR26182418.2.2 M07901:28:000000000-KP3NB:1:1101:10138:2117 length=301",
    ];

    for (i, &o) in QNAMES.iter().enumerate() {
        assert_eq!(fix_sra_format(o.to_string(), '0'), fixed[i]);

        let mut fq = FastQ {
            header:   o.to_string(),
            sequence: Nucleotides::new(),
            quality:  QualityScores::new(),
        };

        fq.fix_header(Some('0'));
        assert_eq!(fq.header, fixed[i]);

        let mut fq = FastQ {
            header:   o.to_string(),
            sequence: Nucleotides::new(),
            quality:  QualityScores::new(),
        };

        fq.fix_header(None);
        assert_eq!(fq.header, o);
    }
}
